@using Lab.Server.Models

<div class="card-deck">
    @foreach (var device in DeviceViewModel.DevicesList.OrderBy(i => i.DeviceNumber))
    {
        <div class="card mb-3 bg-light" style="min-width: 18rem; max-width: 18rem;">
            <div class="card-header">@(device.DeviceNumber)</div>
            <div class="card-body">
                <h5 class="card-title">@device.HardwareId</h5>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" @bind="@device.IsOnline" id="flexCheckDefault" disabled>
                    <label class="form-check-label" for="flexCheckDefault">
                        Online
                    </label>
                    <button disabled="@device.IsBusy" class="btn @(device.Done ? "btn-secondary" : "btn-primary")" @onclick="@(() => SendCommand(device))">Send</button>
                </div>

                @*                <p class="card-text">@todoitem.Notes</p>
            <button disabled="@DeviceViewModel.IsBusy" class="btn @(todoitem.Done ? "btn-secondary" : "btn-primary")" @onclick="@(() => SetToDoItem(todoitem))">Edit</button>
            *@
            </div>
        </div>
    }
</div>

@code {
    [CascadingParameter(Name = "DeviceViewModel")]
    private IDeviceListViewModel? DeviceViewModel { get; set; }
    private void SendCommand(DeviceDetail deviceDetail)
    {
        deviceDetail.ExecuteCommand(DeviceCommand.GetConfig);
    }
}
